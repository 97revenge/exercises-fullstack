import * as proto from "../../__proto__/__proto__";

export default function modelWhileAplyer(
  auth,
  title,
  dificulty,
  descrption,
  image
) {
  const banner = document.querySelector("#banner-container");

  const component = Object.setPrototypeOf({}, proto);

  component.default.svg = document.createElement("svg");

  component.appendElem = function (appender, attach) {
    return appender.appendChild(attach);
  };
  component.newElem = function (appender, elemType, idType) {
    const elem = component.default[elemType].cloneNode(false);
    elem.id = idType;
    const { appendElem } = component;
    return appendElem(appender, elem);
  };

  const { newElem } = component;

  newElem(banner, "div", "aplyer");

  const newAplyer = document.querySelector("#aplyer");

  newElem(newAplyer, "div", "div-elem-flex");

  const divElemFlex = document.querySelector("#div-elem-flex");

  newElem(divElemFlex, "div", "div-elem-starter");

  const divElemStarter = document.querySelector("#div-elem-starter");

  newElem(divElemStarter, "div", "div-starter");

  const divStarter = document.querySelector("#div-starter");

  newElem(divStarter, "svg", "svg-starter");
  const svgStarter = document.querySelector("#svg-starter");
  console.log(svgStarter);
  svgStarter.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M2.54126 2.81641V3.81641H2.04126C1.64344 3.81641 1.2619 3.97444 0.9806 4.25575C0.699295 4.53705 0.54126 4.91858 0.54126 5.31641V8.31641C0.54126 8.71423 0.699295 9.09576 0.9806 9.37707C1.2619 9.65837 1.64344 9.81641 2.04126 9.81641H8.04126C8.43908 9.81641 8.82062 9.65837 9.10192 9.37707C9.38322 9.09576 9.54126 8.71423 9.54126 8.31641V5.31641C9.54126 4.91858 9.38322 4.53705 9.10192 4.25575C8.82062 3.97444 8.43908 3.81641 8.04126 3.81641H7.54126V2.81641C7.54126 2.15337 7.27787 1.51748 6.80903 1.04864C6.34019 0.579798 5.7043 0.316406 5.04126 0.316406C4.37822 0.316406 3.74233 0.579798 3.27349 1.04864C2.80465 1.51748 2.54126 2.15337 2.54126 2.81641ZM6.54126 2.81641V3.81641H3.54126V2.81641C3.54126 2.41858 3.69929 2.03705 3.9806 1.75575C4.2619 1.47444 4.64344 1.31641 5.04126 1.31641C5.43908 1.31641 5.82062 1.47444 6.10192 1.75575C6.38322 2.03705 6.54126 2.41858 6.54126 2.81641ZM5.04126 5.81641C4.77604 5.81641 4.52169 5.92176 4.33415 6.1093C4.14662 6.29684 4.04126 6.55119 4.04126 6.81641C4.04126 7.08162 4.14662 7.33598 4.33415 7.52351C4.52169 7.71105 4.77604 7.81641 5.04126 7.81641C5.30648 7.81641 5.56083 7.71105 5.74837 7.52351C5.9359 7.33598 6.04126 7.08162 6.04126 6.81641C6.04126 6.55119 5.9359 6.29684 5.74837 6.1093C5.56083 5.92176 5.30648 5.81641 5.04126 5.81641Z" fill="#FFA116"/>
  </svg>`;

  newElem(divStarter, "p", "p-starter");

  const pStarter = document.querySelector("#p-starter");
  pStarter.innerHTML = String(auth);

  newElem(divElemFlex, "div", "div-elem");

  const divElem = document.querySelector("#div-elem");

  newElem(divElem, "div", "div-elem-head");

  const divElemHead = document.querySelector("#div-elem-head");

  newElem(divElemHead, "p", "p-exercises-name");
  const pExercisesName = document.querySelector("#p-exercises-name");
  pExercisesName.innerHTML = title;

  newElem(divElem, "div", "div-elem-desc");

  const divElemDesc = document.querySelector("#div-elem-desc");

  newElem(divElemDesc, "div", "div-ease");

  const divEase = document.querySelector("#div-ease");

  newElem(divEase, "p", "p-ease");

  const pEase = document.querySelector("#p-ease");
  pEase.innerHTML = dificulty;

  newElem(divEase, "div", "div-item-star-show");

  const divItemStarShow = document.querySelector("#div-item-star-show");

  divItemStarShow.innerHTML = `
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.59543 0.555431C7.89385 0.480872 8.20602 0.480872 8.50443 0.555431C9.04668 0.691181 9.39318 
  1.10668 9.64893 1.50193C9.90543 1.89793 10.1762 2.44618 10.4972 3.09718L10.7912 3.69343C11.0177 4.15093 11.0522 4.19368 11.0807 4.21843C11.1004 
  4.23643 11.1221 4.25227 11.1452 4.26568C11.1774 4.28443 11.2277 4.30468 11.7347 4.37818L12.3924 4.47418C13.1109 4.57843 13.7154 4.66618 14.1714
   4.78768C14.6259 4.90918 15.1284 5.11018 15.4247 5.58418C15.5879 5.84477 15.6844 6.14148 15.7059 6.44818C15.7449 7.00618 15.4562 7.46368 15.1599
    7.82893C14.8622 8.19568 14.4249 8.62243 13.9044 9.12868L13.4289 9.59293C13.0622 9.94993 13.0337 9.99568 13.0179 10.0302C13.007 10.0545 12.9987
     10.0799 12.9932 10.1059C12.9857 10.1434 12.9819 10.1974 13.0682 10.7014L13.1807 11.3562C13.3037 12.0717 13.4072 12.6747 13.4319 13.1457C13.4574
      13.6159 13.4214 14.1552 13.0622 14.5842C12.8647 14.8197 12.6123 15.0031 12.3272 15.1182C11.8082 15.3274 11.2847 15.1947 10.8452 15.0252C10.4042
       14.8557 9.86343 14.5714 9.22143 14.2332L8.63268 13.9242C8.18043 13.6864 8.12718 13.6729 8.08968 13.6692C8.06326 13.6663 8.03661 13.6663 8.01018
        13.6692C7.97268 13.6729 7.92018 13.6864 7.46718 13.9242L6.87843 14.2332C6.23643 14.5707 5.69568 14.8557 5.25468 15.0252C4.81593 15.1947 4.29168
         15.3274 3.77268 15.1182C3.48763 15.0031 3.23522 14.8197 3.03768 14.5842C2.67768 14.1552 2.64243 13.6159 2.66793 13.1457C2.69268 12.6747 2.79618
          12.0724 2.91918 11.3562L3.03168 10.7014C3.11793 10.1974 3.11418 10.1427 3.10668 10.1059C3.10115 10.0799 3.09285 10.0545 3.08193 10.0302C3.06693
           9.99568 3.03693 9.94993 2.67093 9.59293L2.19543 9.12868C1.67493 8.62243 1.23768 8.19568 0.939932 7.82893C0.643682 7.46368 0.354932 7.00618 0.393932
            6.44818C0.415426 6.14148 0.512012 5.84477 0.675182 5.58418C0.971432 5.10943 1.47393 4.90918 1.92768 4.78768C2.38518 4.66618 2.98893 4.57768 3.70743
             4.47418L4.36518 4.37818C4.87143 4.30468 4.92243 4.28443 4.95468 4.26568C4.97777 4.25251 4.99939 4.23692 5.01918 4.21918C5.04768 4.19368 5.08218
              4.15168 5.30868 3.69343L5.60268 3.09718C5.92368 2.44618 6.19443 1.89793 6.45093 1.50193C6.70668 1.10668 7.05318 0.691931 7.59543 0.555431ZM7.96518
               2.00968C7.94793 2.01943 7.86618 2.07643 7.71018 2.31718C7.50693 2.63068 7.27518 3.09868 6.92643 3.80368L6.65343 4.35718L6.61593 4.43443C6.45618 4.75993 6.29493 5.08843 6.02493 5.33218C5.92605 5.42141 5.81794 5.49986 5.70243 5.56618C5.38743 5.74693 5.02518 5.79868 4.66668 5.85043C4.63818 5.8544 4.60968 5.8584 4.58118 5.86243L3.96993 5.95168C3.19218 6.06418 2.67618 6.14068 2.31468 6.23668C2.03718 6.31093 1.95768 6.37168 1.94343 6.38443C1.91374 6.43369 1.89578 6.48912 1.89093 6.54643C1.89468 6.56518 1.92393 6.66118 2.10468 6.88393C2.34018 7.17343 2.71293 7.53943 3.27618 8.08768L3.71868 8.51893L3.78018 8.57893C4.03968 8.83093 4.30293 9.08593 4.45143 9.41743C4.50543 9.53893 4.54668 9.66643 4.57443 9.79693C4.64943 10.1524 4.58643 10.5132 4.52418 10.8702L4.50918 10.9549L4.40568 11.5632C4.27218 12.3379 4.18518 12.8532 4.16568 13.2259C4.15068 13.5124 4.18293 13.6069 4.19118 13.6249C4.22868 13.6684 4.27593 13.7022 4.32843 13.7247C4.34793 13.7269 4.44843 13.7292 4.71543 13.6257C5.06418 13.4907 5.52693 13.2492 6.22293 12.8832L6.76893 12.5967L6.84543 12.5562C7.16568 12.3867 7.48968 12.2157 7.85043 12.1774C7.98318 12.1624 8.11668 12.1624 8.24943 12.1774C8.61018 12.2157 8.93418 12.3874 9.25443 12.5562L9.33093 12.5967L9.87693 12.8839C10.5729 13.2492 11.0357 13.4914 11.3844 13.6264C11.6522 13.7292 11.7519 13.7269 11.7714 13.7239C11.8241 13.7018 11.8711 13.668 11.9087 13.6249C11.9162 13.6069 11.9499 13.5124 11.9342 13.2259C11.9147 12.8532 11.8277 12.3379 11.6942 11.5632L11.5899 10.9557L11.5749 10.8702C11.5134 10.5132 11.4504 10.1524 11.5254 9.79693C11.5532 9.66643 11.5944 9.53893 11.6484 9.41743C11.7969 9.08593 12.0602 8.83093 12.3197 8.57893C12.3405 8.55899 12.3612 8.53899 12.3819 8.51893L12.8244 8.08768C13.3869 7.53943 13.7597 7.17343 13.9952 6.88318C14.1759 6.66118 14.2052 6.56518 14.2089 6.54568C14.204 6.48863 14.186 6.43347 14.1564 6.38443C14.1414 6.37168 14.0619 6.31093 13.7852 6.23743C13.4237 6.14068 12.9077 6.06493 12.1299 5.95168L11.5187 5.86243L11.4339 5.85043C11.0747 5.79943 10.7117 5.74693 10.3974 5.56618C10.2819 5.49986 10.1738 5.42141 10.0749 5.33218C9.80493 5.08843 9.64368 4.75993 9.48393 4.43443C9.47148 4.40866 9.45898 4.38291 9.44643 4.35718L9.17343 3.80368C8.82543 3.09868 8.59293 2.63068 8.38968 2.31718C8.23368 2.07643 8.15193 2.01943 8.13468 2.00968C8.07892 1.99674 8.02094 1.99674 7.96518 2.00968Z" fill="#8C8C8C"/>
  </svg>
  
  
  `;

  newElem(divEase, "div", "div-item-show");

  const divItemShow = document.querySelector("#div-item-show");

  divItemShow.innerHTML = `
  <svg xmlns="http://www.w3.org/2000/svg" width="19" height="18" viewBox="0 0 19 18" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M8.67505 4.125C7.6367 4.125 6.62167 4.43291 5.75831 5.00978C4.89495 5.58666 4.22204 6.4066 3.82468 7.36591C3.42732 8.32522 3.32336 9.38082 3.52593 10.3992C3.7285 11.4176 4.22852 12.3531 4.96274 13.0873C5.69697 13.8215 6.63243 14.3216 7.65083 14.5241C8.66923 14.7267 9.72483 14.6227 10.6841 14.2254C11.6435 13.828 12.4634 13.1551 13.0403 12.2917C13.6171 11.4284 13.9251 10.4134 13.9251 9.375C13.9251 9.17609 14.0041 8.98532 14.1447 8.84467C14.2854 8.70402 14.4761 8.625 14.6751 8.625C14.874 8.625 15.0647 8.70402 15.2054 8.84467C15.346 8.98532 15.4251 9.17609 15.4251 9.375C15.4251 10.71 15.0292 12.0151 14.2875 13.1251C13.5458 14.2351 12.4916 15.1003 11.2582 15.6112C10.0248 16.1221 8.66756 16.2558 7.35819 15.9953C6.04882 15.7349 4.84609 15.092 3.90208 14.148C2.95808 13.204 2.3152 12.0012 2.05475 10.6919C1.7943 9.38249 1.92797 8.02529 2.43887 6.79189C2.94976 5.55849 3.81492 4.50428 4.92495 3.76258C6.03498 3.02088 7.34003 2.625 8.67505 2.625C8.87396 2.625 9.06473 2.70402 9.20538 2.84467C9.34603 2.98532 9.42505 3.17609 9.42505 3.375C9.42505 3.57391 9.34603 3.76468 9.20538 3.90533C9.06473 4.04598 8.87396 4.125 8.67505 4.125Z" fill="#8A8A8A"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M15.2054 2.84483C15.346 2.98548 15.4249 3.17621 15.4249 3.37508C15.4249 3.57396 15.346 3.76469 15.2054 3.90533L9.95536 9.15533C9.81391 9.29195 9.62446 9.36755 9.42781 9.36584C9.23116 9.36413 9.04305 9.28525 8.904 9.1462C8.76494 9.00714 8.68606 8.81903 8.68435 8.62238C8.68265 8.42574 8.75824 8.23629 8.89486 8.09483L14.1449 2.84483C14.2855 2.70423 14.4762 2.62524 14.6751 2.62524C14.874 2.62524 15.0647 2.70423 15.2054 2.84483Z" fill="#8A8A8A"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M10.925 3.375C10.925 3.17609 11.0041 2.98532 11.1447 2.84467C11.2854 2.70402 11.4761 2.625 11.675 2.625H14.675C14.874 2.625 15.0647 2.70402 15.2054 2.84467C15.346 2.98532 15.425 3.17609 15.425 3.375V6.375C15.425 6.57391 15.346 6.76468 15.2054 6.90533C15.0647 7.04598 14.874 7.125 14.675 7.125C14.4761 7.125 14.2854 7.04598 14.1447 6.90533C14.0041 6.76468 13.925 6.57391 13.925 6.375V4.125H11.675C11.4761 4.125 11.2854 4.04598 11.1447 3.90533C11.0041 3.76468 10.925 3.57391 10.925 3.375Z" fill="#8A8A8A"/>
</svg>
  
  `;

  newElem(divElem, "div", "div-elem-content");

  const divElemContent = document.querySelector("#div-elem-content");

  newElem(divElemContent, "div", "div-content");

  const divContent = document.querySelector("#div-content");

  newElem(divContent, "p", "p-content-description");

  const pContentDescription = document.querySelector("#p-content-description");

  pContentDescription.innerHTML = descrption;

  newElem(divContent, "img", "img-carbon");

  const imgCarbon = document.querySelector("#img-carbon");
  imgCarbon.src = image;
}
